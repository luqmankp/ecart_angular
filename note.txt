.angular        - configuration btw angular app and angular cli
.vscode         - configuration btw vscode and angular
node_modules    - when install extra 3rd party packages or libraries its copy is storded here
.editorconfig   - editor configuration files
.gitignore      - files to be ignored during push
angular.json    - angular details
package.json    - includes name and version of all packages
tsconfig. files - type script configuration files


create project 
   -ng new projectName   or
   -ng new projectName --routing   //(if routing not asking)

clear errors/warning 
   -npm i --forcee

project running cmd
   -ng serve --open
 
to create new component
   -ng g c demo      //(g-genarate  c-component)


life cycle of angular component
--------------------------------
constructor--->ngOnInit --->other methods

Data Binding Techniques in Angular (data sharing in component)
-----------------------------------
html  - view
ts    - component


1  One way binding
-------------------
1.1 - component to view data sharing :
  
  1.1.1  string interpollation         {{...}}  
  1.1.2  property binding              [property]="..."

1.2 - view to component data sharing :

  1.2.1  event binding                 (event)="method()"
  1.2.2  event binding using $event    (event)=method($event) 
  1.2.3  event binding using template rendering variable #variable

2 Two way binding
-------------------
2.1 - ngModel           [(ngModel)]="property"    -- FormsModule


Redirection in angular
-----------------------
Module - AppRoutingModule
Router - a class used to redirect 
methods- navigateByUrl
 

Dependency Injection
---------------------
to share datas from one class to another class

inside constructor 
    access_specifier reference:ClassName
    private/public

   reference.meathod()


Angular Services 
------------------
to store redentant datas and methods 
-all the components can acess the datas and methods defined in service file easily
 
         - ng g s <service_name>

-------------------------------------------------------------------------------------------------------------------------
[ (ngSubmit)="funtion()" is used in form tag and button type="submit" used to submit data when enter button is clicked ]
-------------------------------------------------------------------------------------------------------------------------
  

Angular Directives - to manipulate DOM 
-----------------------------------------
1.component dierectives
2.structural dierectives   *ngFor  *ngIf
3.atribute directives      [ngClass]


Validation In Angular
------------------------

1.template driven form
2.model driven form

   2.1. reactive form  -used to create model of form
         reactive form contain -group,array,control

            -ReactiveFormsModule       -module
            -FormBuilder               -class used to create model form
            -group()                   -method to create model



Local Storage In Angular
-------------------------
localStorage.getItem()
localStorage.setItem()
localStorage.removeItem()

json - stringify   parse


Parent Child Components Communication
---------------------------------------
@Input()   parent to chile data sharing
@Output()  child to parent data sharing


Event Creation In angular
---------------------------
we can create our own events in angular projects

EventEmitter   - class used to create userdefined events
                 eventname=new EventEmitter()
                 emit() - to define the working time/to start the event


Date and time In Angular
--------------------------
class   -Date


Angular Pipes
----------------
to convert dates into anoter format

   Pipes Creation  - command to create new pipe:
   ---------------
      -  ng g pipe (pipeName)


API Creation in Angular
=========================
httpClientModule   - module to create web api calls 
httpClient         - class inside the httpClientModule

folder     files     class   methods
package   modules    class   methods


Asynchronous Code Handling in ts
----------------------------------
js - promise     - resolve   then()
                 - reject    catch()

ts - observable  - resolve   subscribe()
                 - reject    catch()


Header generation for api request 
-----------------------------------
HttpHeaders  - class used to generate Header



Lazy-Loading
===========================
provide less loading time for high traffic pages 

ng g module (module name) --route (module name) --module app.module



json server 
------------
1. installing server
npm i --save json-server
  
  2.run server in server file location
    npx json-server --watch db.json --port 3000


==============================================================
catagories of blackmirror setItem---
------------------------------------
Topwear -1                               - used in project
Bottomwear -2
Accessories -3
==============================================================



Behaviour Subject
-------------------
to share data between modules     - method used in Behaviour Subject is an Asynchronous method

rxjs (reactive extension for js)  - is library of behaviour subject
                                      -:is used to handle Asynchronous implementations in angular



Activated Router In Angular
----------------------------
used to access data from urls (access params)

class           - ActivatedRoute
method          - params()     (its a Asynchronous method)